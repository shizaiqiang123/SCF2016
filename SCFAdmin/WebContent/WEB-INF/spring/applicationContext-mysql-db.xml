<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                         classpath:/org/springframework/beans/factory/xml/spring-beans-2.0.xsd
                         http://www.springframework.org/schema/tx
                         classpath:/org/springframework/transaction/config/spring-tx-2.0.xsd
                         http://www.springframework.org/schema/aop
                         classpath:/org/springframework/aop/config/spring-aop-2.0.xsd">

	<!--************************************************************** 配置数据库连接 -->


	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/scfdev"> </property> 
	</bean>
	<!-- <bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/scfdev2"> </property> 
	</bean> -->
	<bean id="sessionFactory" class="com.ut.scf.dao.hibernate.MyLocalSessionFactoryBean" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.ut.scf.orm.*</value> 		
			</list>
		</property>
	</bean>
	
	<!-- <bean id="sessionFactory2" class="com.ut.scf.dao.hibernate.MyLocalSessionFactoryBean" lazy-init="true">
		<property name="dataSource" ref="dataSource2" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="format_sql">true</prop> 
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.ut.scf.orm.*</value> 		
			</list>
		</property>
	</bean> -->

 	<tx:annotation-driven transaction-manager="H4TxManager"/> 
 	<!-- <tx:annotation-driven transaction-manager="H4TxManager2"/> -->
 	<!-- 给事务注入sessionFactory属性 -->  
    <bean id="H4TxManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean> 
   <!--  <bean id="H4TxManager2" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory2" />  
    </bean>   -->
	    <!-- 事务属性配置 -->  
    <tx:advice id="txAdvice" transaction-manager="H4TxManager">  
        <tx:attributes>  
            <!-- 方法对应的传播属性 -->  
            <tx:method name="exec*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>  
   <!--  <tx:advice id="txAdvice2" transaction-manager="H4TxManager2">  
        <tx:attributes>  
            方法对应的传播属性  
            <tx:method name="exec*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>   -->
    <!-- 事务控制位置，一般在业务层service -->  
    <aop:config>  
        <aop:pointcut id="txPointcut" expression="execution(* com.ut..dao..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
       <!--  <aop:advisor advice-ref="txAdvice2" pointcut-ref="txPointcut"/>   -->
    </aop:config> 
</beans>
